/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grupp10.user;

import grupp10.User;
import grupp10.utility.DatabaseHandler;
import grupp10.utility.Validation;
import javax.swing.JOptionPane;

/**
 *
 * @author Lukas Lindgren
 */
public class ChangePassword extends javax.swing.JFrame {

    /**
     * Creates new form ChangePassword
     */
    public ChangePassword() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblOldPassword = new javax.swing.JLabel();
        lblRepeatNewPassword = new javax.swing.JLabel();
        lblNewPassword = new javax.swing.JLabel();
        pfOldPassword = new javax.swing.JPasswordField();
        pfNewPassword = new javax.swing.JPasswordField();
        pfRepeatNewPassword = new javax.swing.JPasswordField();
        btnChangePassword = new javax.swing.JButton();
        lblLosenordAndrat = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblOldPassword.setText("Gammalt lösenord:");

        lblRepeatNewPassword.setText("Repetera nytt lösenord:");

        lblNewPassword.setText("Nytt lösenord:");

        btnChangePassword.setText("Ändra lösenord");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNewPassword)
                    .addComponent(lblRepeatNewPassword)
                    .addComponent(lblOldPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLosenordAndrat)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnChangePassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pfRepeatNewPassword)
                            .addComponent(pfNewPassword)
                            .addComponent(pfOldPassword))
                        .addGap(119, 119, 119))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pfOldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOldPassword))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewPassword)
                    .addComponent(pfNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRepeatNewPassword)
                    .addComponent(pfRepeatNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnChangePassword)
                .addGap(18, 18, 18)
                .addComponent(lblLosenordAndrat)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method that checks if old password input matches the one with the logged in user.
     * @param username: Logged in user
     * @param oldPassword: Old password input
     * @return true if old password matches, false if not.
     */
    public boolean matchUsernamePassword(String username, String oldPassword) {
        
        boolean match = false;
        
        String sqlOldPassword = "select losenord from larare where anvandarnamn = '" + username + "'";
        
        if(DatabaseHandler.fetchSingle(sqlOldPassword).equals(oldPassword)) {
            match = true;
        } else {
            JOptionPane.showMessageDialog(null, "Användarnamn och gammalt lösenord matchar inte.", "Fel!", JOptionPane.INFORMATION_MESSAGE);
        }
        
        return match;
    }

    /**
     * Method that checks if the both input new passwords match.
     * @param newPassword: First input new password.
     * @param repeatNewPassword: Second input new password.
     * @return true if passwords match, false if not.
     */
    public boolean matchNewPassword(String newPassword, String repeatNewPassword) {
        
        boolean match = false;
        
        if(newPassword.equals(repeatNewPassword)) {
            match = true;
        } else {
            JOptionPane.showMessageDialog(null, "Nya lösenordet matchar inte.", "Fel!", JOptionPane.INFORMATION_MESSAGE);
        }
        
        return match;
    }
    
    /**
     * Method that checks if the new input password is longer than six letters.
     * @param password: New input password.
     * @return true if password is valid, false if not.
     */
    public boolean validPassword(String password) {
        
        boolean valid = false;
        
        if(password.length() > 6 && password.length() < 40) {
            valid = true;
        } else {
            JOptionPane.showMessageDialog(null, "Lösenordet måste vara längre än sex bokstäver.", "Fel!", JOptionPane.INFORMATION_MESSAGE);
        }
        
        return valid;
    }
    
    /**
     * Method that changes the password.
     */
    public void changePassword() {
        
        String inlogUsername = User.username;
        String oldPassword = pfOldPassword.getText();
        String newPassword = pfNewPassword.getText();
        String repeatNewPassword = pfRepeatNewPassword.getText();
        String sqlChangePassword = "update larare set losenord = '" + newPassword + "' where anvandarnamn = '" + inlogUsername + "'";
        
        if(matchUsernamePassword(inlogUsername, oldPassword)) {
            if(matchNewPassword(newPassword, repeatNewPassword)) {
                if(validPassword(newPassword)) {
                    DatabaseHandler.update(sqlChangePassword);
                    lblLosenordAndrat.setText("Lösenord ändrat!");
                }
            }
        }
    }
    
    /**
     * Action for the 'change password' button.
     * @param evt 
     */
    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        
        if(Validation.passwordfieldNotEmpty(pfOldPassword, "Vänligen skriv in ditt gamla lösenord.")) {
            if(Validation.passwordfieldNotEmpty(pfNewPassword, "Vänligen skriv in ett nytt lösenord.")) {
                if(Validation.passwordfieldNotEmpty(pfRepeatNewPassword, "Vänligen repetera det nya lösenordet.")) {
                    changePassword();
                }
            }
        }
    }//GEN-LAST:event_btnChangePasswordActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JLabel lblLosenordAndrat;
    private javax.swing.JLabel lblNewPassword;
    private javax.swing.JLabel lblOldPassword;
    private javax.swing.JLabel lblRepeatNewPassword;
    private javax.swing.JPasswordField pfNewPassword;
    private javax.swing.JPasswordField pfOldPassword;
    private javax.swing.JPasswordField pfRepeatNewPassword;
    // End of variables declaration//GEN-END:variables
}
